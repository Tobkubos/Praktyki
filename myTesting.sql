--system tobiasz
--MY_TESTING MY_TESTING

/*
DROP TABLE USERS;
DROP TABLE PROD;
DROP TABLE CATP;
DROP TABLE CATP_PROD;
DROP TABLE MAH;
DROP SEQUENCE USERS_USR_ID_SEQ;
DROP SEQUENCE PROD_PROD_ID_SEQ;
DROP SEQUENCE CATP_CATP_ID_SEQ;
DROP SEQUENCE CATP_PROD_CATP_PROD_ID_SEQ;
DROP SEQUENCE MAH_MAH_ID_SEQ;
*/

CREATE TABLE USERS(
    USR_ID NUMBER(10),
    NAME VARCHAR2(50) NOT NULL,
    SURNAME VARCHAR2(50) NOT NULL,
    EMAIL VARCHAR2(50) NOT NULL,
    
    CONSTRAINT USERS_USR_ID_PK PRIMARY KEY(USR_ID)
);
COMMENT ON TABLE USERS IS '{O: "MY_TESTING", C: "Tabela użytkowników"}';
COMMENT ON COLUMN USERS.USR_ID IS 'Klucz główny';
COMMENT ON COLUMN USERS.NAME IS 'Imię';
COMMENT ON COLUMN USERS.SURNAME IS 'Nazwisko';
COMMENT ON COLUMN USERS.EMAIL IS 'e-mail';

CREATE SEQUENCE USERS_USR_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
    
CREATE OR REPLACE TRIGGER USERS_USR_ID_TRG
    BEFORE INSERT ON USERS
    FOR EACH ROW
    BEGIN
        IF: NEW.USR_ID IS NULL THEN
        SELECT USERS_USR_ID_SEQ.NEXTVAL INTO :NEW.USR_ID FROM DUAL;
        END IF;
    END;
/









CREATE TABLE PROD(
    PROD_ID NUMBER(10),
    STATUS CHAR(1) DEFAULT 'I' NOT NULL CHECK(STATUS IN ('A', 'I')),
    PROD_NAME VARCHAR(80) NOT NULL,
    PROD_FORM VARCHAR(20),
    PROD_STRENGTH VARCHAR2(20),
    PROD_PACKAGE VARCHAR2(20),
    MAH_ID NUMBER(10) NOT NULL,
    BLZ7 NUMBER(10),
    GTIN NUMBER(13),
    PROD_STOCK NUMBER(15,3) DEFAULT 0 NOT NULL CHECK(PROD_STOCK BETWEEN 0 AND 999999999),
    PROD_PRICE NUMBER(15,3) DEFAULT 0 NOT NULL CHECK(PROD_PRICE BETWEEN 0 AND 999999999),

    CONSTRAINT PROD_PROD_ID_PK PRIMARY KEY (PROD_ID)
);

COMMENT ON TABLE PROD IS '{O: "MY_TESTING", C: "Produkty"}';
COMMENT ON COLUMN PROD.PROD_ID IS 'Klucz główny';
COMMENT ON COLUMN PROD.STATUS IS 'Status';
COMMENT ON COLUMN PROD.PROD_NAME IS 'Nazwa Produktu';
COMMENT ON COLUMN PROD.PROD_FORM IS 'Forma Produktu';
COMMENT ON COLUMN PROD.PROD_STRENGTH IS 'Moc Produktu';
COMMENT ON COLUMN PROD.PROD_PACKAGE IS 'Opakowanie';
COMMENT ON COLUMN PROD.MAH_ID IS 'ID podmiotu odpowiedzialnego';
COMMENT ON COLUMN PROD.BLZ7 IS 'Kod BLZ7';
COMMENT ON COLUMN PROD.GTIN IS 'Globalny numer jednostki handlowej';
COMMENT ON COLUMN PROD.PROD_STOCK IS 'Stan magazynowy';
COMMENT ON COLUMN PROD.PROD_PRICE IS 'Cena produktu';

CREATE SEQUENCE PROD_PROD_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE OR REPLACE TRIGGER PROD_PROD_ID_TRG
    BEFORE INSERT ON PROD
    FOR EACH ROW
    BEGIN
        IF: NEW.PROD_ID IS NULL THEN
        SELECT PROD_PROD_ID_SEQ.NEXTVAL INTO :NEW.PROD_ID FROM DUAL;
        END IF;
    END;
/












CREATE TABLE CATP(
    CATP_ID NUMBER(10) NOT NULL,
    ACTIVE CHAR(1) DEFAULT 'N' NOT NULL CHECK(ACTIVE IN('Y','N')),
    NAME VARCHAR2(50) NOT NULL,
    
    CONSTRAINT CATP_CATP_OD_PK PRIMARY KEY (CATP_ID),
    CONSTRAINT CATP_NAME_UK UNIQUE (NAME) 
);

COMMENT ON TABLE CATP IS '{O: "MY_TESTING", C: "Kategorie produktów"}';
COMMENT ON COLUMN CATP.CATP_ID IS 'klucz główny';
COMMENT ON COLUMN CATP.ACTIVE IS 'Status';
COMMENT ON COLUMN CATP.NAME IS 'Nazwa Kategorii';


CREATE SEQUENCE CATP_CATP_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

CREATE OR REPLACE TRIGGER CATP_CATP_ID_TRG
    BEFORE INSERT ON CATP
    FOR EACH ROW
    BEGIN
        IF: NEW.CATP_ID IS NULL THEN
        SELECT CATP_CATP_ID_SEQ.NEXTVAL INTO :NEW.CATP_ID FROM DUAL;
        END IF;
    END;
/    












--CATP_PROD + SEQUENCE + TRIGGER + PK (FK UK 1.1, FK UK 1.2)
CREATE TABLE CATP_PROD(
    CATP_PROD_ID NUMBER(10) NOT NULL,
    CATP_ID NUMBER(10) NOT NULL,
    PROD_ID NUMBER(10) NOT NULL,
    
    CONSTRAINT CATP_PROD_CATP_PROD_ID_PK PRIMARY KEY (CATP_PROD_ID),
    CONSTRAINT CATP_PROD_CATP_ID_PROD_ID UNIQUE (CATP_ID, PROD_ID),
    CONSTRAINT CATP_PROD_CAPT_CATP_ID_FK FOREIGN KEY (CATP_ID) REFERENCES CATP(CATP_ID),
    CONSTRAINT CATP_PROD_PROD_PROD_ID_FK FOREIGN KEY (PROD_ID) REFERENCES PROD(PROD_ID)
);
    
COMMENT ON TABLE CATP_PROD IS '{O: "MY_TESTING", C: "tabela asocjacji dla CATP i PROD"}';
COMMENT ON COLUMN CATP_PROD.CATP_PROD_ID IS 'klucz główny';
COMMENT ON COLUMN CATP_PROD.CATP_ID IS 'klucz kategorii';
COMMENT ON COLUMN CATP_PROD.PROD_ID IS 'klucz produktu';
    
CREATE SEQUENCE CATP_PROD_CATP_PROD_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
    
CREATE OR REPLACE TRIGGER CATP_PROD_CATP_PROD_ID_TRG
    BEFORE INSERT ON CATP_PROD
    FOR EACH ROW
    BEGIN
        IF: NEW.CATP_PROD_ID IS NULL THEN
        SELECT CATP_PROD_CATP_PROD_ID_SEQ.NEXTVAL INTO :NEW.CATP_PROD_ID FROM DUAL;
        END IF;
    END;
/    
    
    
    
    
    
    
    
    
    
CREATE TABLE MAH(
    MAH_ID NUMBER(10) NOT NULL,
    NAME VARCHAR2(100) NOT NULL,
    COUNTRY VARCHAR2(100) NOT NULL,
    
    CONSTRAINT MAH_MAH_ID_PK PRIMARY KEY (MAH_ID)
);

COMMENT ON TABLE MAH IS '{O: "MY_TESTING", C: "podmiot odpowiedzialny"}';
COMMENT ON COLUMN MAH.MAH_ID is 'klucz główny';
COMMENT ON COLUMN MAH.Name is 'Nazwa podmiotu';
COMMENT ON COLUMN MAH.Country is 'Kraj';

CREATE SEQUENCE MAH_MAH_ID_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;
    
CREATE OR REPLACE TRIGGER MAH_MAH_ID_TRG
    BEFORE INSERT ON MAH
    FOR EACH ROW
    BEGIN
        IF: NEW.MAH_ID IS NULL THEN
        SELECT MAH_MAH_ID_SEQ.NEXTVAL INTO :NEW.MAH_ID FROM DUAL;
        END IF;
    END;
/   




--CONSTRAINT DO PROD - MAH
ALTER TABLE PROD ADD(
    CONSTRAINT PROD_MAH_MAH_ID_FK FOREIGN KEY (MAH_ID) REFERENCES MAH(MAH_ID)
)

--CONST COLUMNS FOR ALL
ALTER TABLE USERS ADD(
    CREATED_DT DATE DEFAULT SYSDATE NOT NULL,
    UPDATED_DT DATE DEFAULT SYSDATE NOT NULL,
    CUSR_ID NUMBER(10) NOT NULL,
    UUSR_ID NUMBER(10) NOT NULL,
    
    CONSTRAINT USERS_CUSR_ID_USR_ID_FK FOREIGN KEY (CUSR_ID) REFERENCES USERS(USR_ID),
    CONSTRAINT USERS_UUSR_ID_USR_ID_FK FOREIGN KEY (UUSR_ID) REFERENCES USERS(USR_ID)
);
COMMENT ON COLUMN USERS.CREATED_DT IS 'Data stworzenia';
COMMENT ON COLUMN USERS.UPDATED_DT IS 'Data aktualizacji';
COMMENT ON COLUMN USERS.CUSR_ID IS 'ID użytkownika który stworzył rekord';
COMMENT ON COLUMN USERS.UUSR_ID IS 'ID użytkownika który zaktualizował rekord';

    
ALTER TABLE PROD ADD(
    CREATED_DT DATE DEFAULT SYSDATE NOT NULL,
    UPDATED_DT DATE DEFAULT SYSDATE NOT NULL,
    CUSR_ID NUMBER(10) NOT NULL,
    UUSR_ID NUMBER(10) NOT NULL,
    
    CONSTRAINT PROD_CUSR_ID_USR_ID_FK FOREIGN KEY (CUSR_ID) REFERENCES USERS(USR_ID),
    CONSTRAINT PROD_UUSR_ID_USR_ID_FK FOREIGN KEY (UUSR_ID) REFERENCES USERS(USR_ID)
);
COMMENT ON COLUMN PROD.CREATED_DT IS 'Data stworzenia';
COMMENT ON COLUMN PROD.UPDATED_DT IS 'Data aktualizacji';
COMMENT ON COLUMN PROD.CUSR_ID IS 'ID użytkownika który stworzył rekord';
COMMENT ON COLUMN PROD.UUSR_ID IS 'ID użytkownika który zaktualizował rekord';

ALTER TABLE CATP ADD(
    CREATED_DT DATE DEFAULT SYSDATE NOT NULL,
    UPDATED_DT DATE DEFAULT SYSDATE NOT NULL,
    CUSR_ID NUMBER(10) NOT NULL,
    UUSR_ID NUMBER(10) NOT NULL,
    
    CONSTRAINT CATP_CUSR_ID_USR_ID_FK FOREIGN KEY (CUSR_ID) REFERENCES USERS(USR_ID),
    CONSTRAINT CATP_UUSR_ID_USR_ID_FK FOREIGN KEY (UUSR_ID) REFERENCES USERS(USR_ID)
); 
COMMENT ON COLUMN CATP.CREATED_DT IS 'Data stworzenia';
COMMENT ON COLUMN CATP.UPDATED_DT IS 'Data aktualizacji';
COMMENT ON COLUMN CATP.CUSR_ID IS 'ID użytkownika który stworzył rekord';
COMMENT ON COLUMN CATP.UUSR_ID IS 'ID użytkownika który zaktualizował rekord';

ALTER TABLE CATP_PROD ADD(
    CREATED_DT DATE DEFAULT SYSDATE NOT NULL,
    UPDATED_DT DATE DEFAULT SYSDATE NOT NULL,
    CUSR_ID NUMBER(10) NOT NULL,
    UUSR_ID NUMBER(10) NOT NULL,
    
    CONSTRAINT CATP_PROD_CUSR_ID_USR_ID_FK FOREIGN KEY (CUSR_ID) REFERENCES USERS(USR_ID),
    CONSTRAINT CATP_PROD_UUSR_ID_USR_ID_FK FOREIGN KEY (UUSR_ID) REFERENCES USERS(USR_ID)
);
COMMENT ON COLUMN CATP_PROD.CREATED_DT IS 'Data stworzenia';
COMMENT ON COLUMN CATP_PROD.UPDATED_DT IS 'Data aktualizacji';
COMMENT ON COLUMN CATP_PROD.CUSR_ID IS 'ID użytkownika który stworzył rekord';
COMMENT ON COLUMN CATP_PROD.UUSR_ID IS 'ID użytkownika który zaktualizował rekord';

ALTER TABLE MAH ADD(
    CREATED_DT DATE DEFAULT SYSDATE NOT NULL,
    UPDATED_DT DATE DEFAULT SYSDATE NOT NULL,
    CUSR_ID NUMBER(10) NOT NULL,
    UUSR_ID NUMBER(10) NOT NULL,
    
    CONSTRAINT MAH_CUSR_ID_USR_ID_FK FOREIGN KEY (CUSR_ID) REFERENCES USERS(USR_ID),
    CONSTRAINT MAH_UUSR_ID_USR_ID_FK FOREIGN KEY (UUSR_ID) REFERENCES USERS(USR_ID)
); 
COMMENT ON COLUMN MAH.CREATED_DT IS 'Data stworzenia';
COMMENT ON COLUMN MAH.UPDATED_DT IS 'Data aktualizacji';
COMMENT ON COLUMN MAH.CUSR_ID IS 'ID użytkownika który stworzył rekord';
COMMENT ON COLUMN MAH.UUSR_ID IS 'ID użytkownika który zaktualizował rekord';

